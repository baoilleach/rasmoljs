#!/bin/sh
# OpenEye Scientific Software
# Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005
# Last modified: 10th January 2005
#
trap 'rm -f conf.subs conf.arch conf.c conf.cpp conf conf.o conf.exe core; exit 1' 1 2 15
USERPATH=$PATH:/usr/bin:/bin:/usr/bsd
PATH=/usr/bin:/bin:/usr/bsd:$PATH
IFS=":	 "

# Configure settings
MODE=safe
usedistcc=0
useprof=0
usemsvc=0
useicc=0
usegcc=0
cygwin=0
LINKAGE="static shared"

while [ "$1" != "" ] ; do
    case "$1" in
        fast)             MODE=fast      ;;
        safe)             MODE=safe      ;;
        debug)            MODE=debug     ;;
        cc|usecc)         usegcc=0       ;;
        gcc|usegcc)       usegcc=1       ;;
        o32)              SGI_ABI=o32    ;;
        n32|32)           SGI_ABI=n32    ;;
        n64|64)           SGI_ABI=n64    ;;
        cygwin)           cygwin=1       ;;
        nocygwin)         cygwin=0       ;;
        msvc|vc)          usemsvc=1      ;;
        icc|intel)        useicc=1       ;;
        shared)           LINKAGE=shared ;;
        static)           LINKAGE=static ;;
        xlc)              usexlc=1       ;;
        profile)          useprof=1      ;;
        prof|gprof)       useprof=1      ;;
        distcc|usedistcc) usedistcc=1;   ;;
        *)   echo "Error: configure: unknown argument"
             exit 1
             ;;
    esac
    shift
done

VPATH=`dirname $0`

# Default settings
CC=
CXX=
ABI=
COPTS1="-O"
COPTS2="-O"
LOPTS=
CMPFLAGS=
CXXFLAGS=
SYSSOCKLIBS=
SYSSQRTLIB="-lm"
SYSMATHLIB="-lm"
SYSMPLIBS=
SYSKMEMLIB=
LOCALINCS="-I/usr/local/include"
LOCALLIBS="-L/usr/local/lib"
HASSHARED="yes"
CSOFLAGS=
DSOLIBS=
X11INCS=
X11LIBS=
PVMINCS=
PVMLIBS=
HASPVM="no"
HASSWIG="no"
ISMAC="no"
QTINCS=
QTLIBS=
QWTINCS=
QWTLIBS=
HASQT="no"
HASQWT="no"
FLTKINCS=
FLTKLIBS=
HASGL="no"
GLDLIBS=
GLINCS=
HASFLTK="no"
MWINDOWS=
WINDRES=
RANLIB=
DLL=".so"
OBJ=".o"
SOBJ=".o"
LIB=".a"
EXE=
LIBPREFIX="lib"
LN="ln -s"
CXXAR=
REZ=
MOC=
UIC=
LRELEASE=
PYINCLUDE=
PYLIB=
PYPACKAGE=
JAVAC=
JAVA=
JAR="jar"
JAVAINC=
JAVALIBPREFIX="lib"
JAVA_DLINK=
JAVASO=
HASJAVA="no"
COMPILER="native"

if test $MODE = debug ; then
    CFLAGS="-g"
    LFLAGS=
else
    CFLAGS=
    LFLAGS="-s"
fi

# Determine Operating System
ostype="unknown"
osver=`uname -r | sed -n -e 's/\([0-9]\{1,2\}\.[0-9]\).*/\1/p'`
osmaj=`echo $osver | cut -d. -f1`
osmin=`echo $osver | cut -d. -f2`
gccver=""
gccmaj=""
gccmin=""
dist=""
arch=""

case `uname -s` in
    SunOS)
        X11INCS="-I/usr/openwin/include"
        X11LIBS="-L/usr/openwin/lib"
        if test "$osmaj" -ge 5 ; then
            ostype="solaris"
            osmaj=`expr $osmaj - 3`
            osver="$osmaj.$osmin"

            SYSSOCKLIBS="-lsocket -lnsl"
            SYSKMEMLIB="-lkstat"
            SYSMPLIBS="-lthread"
            DSOLIBS="-ldl"

            if test -x /usr/bin/isalist ; then
                arch=`isalist | cut -f1 -d" "`
            fi
            if test -z "$arch" ; then
                arch=`uname -p`
            fi

            if test -x /opt/SUNWspro/bin/cc ; then
                CC="/opt/SUNWspro/bin/cc"
            else
                CC="true"
                for dir in $USERPATH ; do
                    if test -z "$dir" ; then
                        continue
                    fi
                    if test "$dir/cc" = /usr/ucb/cc ; then
                        continue
                    fi
                    if test -x "$dir/cc" ; then
                        CC="$dir/cc"
                        break
                    fi
                done
            fi

            if test -x /opt/SUNWspro/bin/CC ; then
                CXX="/opt/SUNWspro/bin/CC"
            fi

            CMPFLAGS="-mt -D_REENTRANT"
            LSOFLAGS="-G -dy"
            # CFLAGS="-fd"

            version=`$CC -V 2>&1 | head -1`
            if test "$version" = "cc: SC3.0.1 13 Jul 1994" ; then
                if test $MODE = "debug" ; then
                    CFLAGS="-v -g"
                    COPTS1="-fast -xO4 -fsimple -native"
                    arch="sparc"
                elif test $MODE = "fast" ; then
                    CFLAGS="-v"
                    case $arch in
                        sparcv8*|sparcv9*)
                            COPTS1="-fast -xO4 -fsimple -native -xcg92"
                            arch="sparcv8"
                            ;;
                        *)  COPTS1="-fast -xO4 -fsimple -native"
                            arch="sparc"
                            ;;
                    esac
                else
                    CFLAGS="-v"
                    COPTS1="-fast -xO4 -fsimple"
                    arch="sparc"
                fi
            elif test "$version" = "cc: SC4.0 18 Oct 1995 C 4.0" ; then
                if test $MODE = "debug" ; then
                    CFLAGS="-v -g"
                else
                    CFLAGS="-v"
                fi
                if test $MODE = "safe" ; then
                    if test "$SGI_ABI" = "n64" ; then
                        ARCH="-xarch=v9"
                        arch="sparcv9"
                    else
                        ARCH=""
                        arch="sparc"
                    fi
                    COPTS1="-fast -xO5 -xtarget=generic $ARCH -xcrossfile"
                else
                    if test -x /opt/SUNWspro/bin/fpversion ; then
                        ARCH="-`/opt/SUNWspro/bin/fpversion -foption`"
                    else
                        ARCH=""
                        for dir in $USERPATH ; do
                            if test -z "$dir" ; then
                                continue
                            fi
                            if test -x "$dir/fpversion" ; then
                                ARCH="-`$dir/fpversion -foption 2> /dev/null`"
                                break
                            fi
                        done
                    fi
                    # -xarch=v9a slower than nothing!
                    arch="sparc"
                    case "$arch" in
                        sparc)           ;;
                        sparcv9+vis)     if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plusa"
                                             arch="sparcv8plus+vis"
                                         else
                                             ARCH="$ARCH -xarch=v9a"
                                         fi
                                         ;;
                        sparcv9*)        if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plus"
                                             arch="sparcv8plus" 
                                         else
                                             ARCH="$ARCH -xarch=v9"
                                             arch="sparcv9"
                                         fi
                                         ;;
                        sparcv8plus+vis) ARCH="$ARCH -xarch=v8plusa"
                                         ;;
                        sparcv8plus)     ARCH="$ARCH -xarch=v8plus"
                                         ;;
                        sparcv8-fsmuld)  ARCH="$ARCH -xarch=v8a"
                                         ;;
                        sparcv8*)        ARCH="$ARCH -xarch=v8"
                                         arch="sparcv8"
                                         ;;
                        sparcv7*)        ARCH="$ARCH -xarch=v7"
                                         arch="sparc"
                                         ;;
                        *)               arch="unknown"
                                         ;;
                    esac
                    if test $MODE = "fast" ; then
                        COPTS1="-fast -xO5 $ARCH -xcrossfile"
                    else
                        COPTS1="-fast -xO3 $ARCH"
                    fi
                fi
                COPTS1="$COPTS1 -xdepend -fsimple=2 -xsafe=mem"
            elif test "$version" = "cc: WorkShop Compilers 5.0 98/12/15 C 5.0" ; then
                if test $MODE = "debug" ; then
                    CFLAGS="-v -g -xs"
                else
                    CFLAGS="-v"
                fi
                if test $MODE = "safe" ; then
                    if test "$SGI_ABI" = "n64" ; then
                        ARCH="-xarch=v9"
                        arch="sparcv9"
                    else
                        ARCH=""
                        arch="sparc"
                    fi
                    COPTS1="-fast -xO5 -xtarget=generic $ARCH -xcrossfile"
                else
                    if test -x /opt/SUNWspro/bin/fpversion ; then
                        ARCH="-`/opt/SUNWspro/bin/fpversion -foption`"
                    else
                        ARCH=""
                        for dir in $USERPATH ; do
                            if test -z "$dir" ; then
                                continue
                            fi
                            if test -x "$dir/fpversion" ; then
                                ARCH="-`$dir/fpversion -foption 2> /dev/null`"
                                break
                            fi
                        done
                    fi
                    # -xarch=v9a slower than nothing!
                    arch="sparc"
                    case "$arch" in
                        sparc)           ;;
                        sparcv9+vis)     if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plusa"
                                             arch="sparcv8plus+vis"
                                         else
                                             ARCH="$ARCH -xarch=v9a"
                                             CSOFLAG="-xcode=pic32"
                                         fi
                                         ;;
                        sparcv9*)        if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plus"
                                             arch="sparcv8plus" 
                                         else
                                             ARCH="$ARCH -xarch=v9"
                                             CSOFLAG="-xcode=pic32"
                                             arch="sparcv9"
                                         fi
                                         ;;
                        sparcv8plus+vis) ARCH="$ARCH -xarch=v8plusa"
                                         ;;
                        sparcv8plus)     ARCH="$ARCH -xarch=v8plus"
                                         ;;
                        sparcv8-fsmuld)  ARCH="$ARCH -xarch=v8a"
                                         ;;
                        sparcv8*)        ARCH="$ARCH -xarch=v8"
                                         arch="sparcv8"
                                         ;;
                        sparcv7*)        ARCH="$ARCH -xarch=v7"
                                         arch="sparc"
                                         ;;
                        *)               arch="unknown"
                                         ;;
                    esac
                    if test $MODE = "fast" ; then
                        COPTS1="-fast -xO5 $ARCH -xcrossfile"
                    else
                        COPTS1="-fast -xO3 $ARCH"
                    fi
                fi
                # "-xdepend" optimizer bug in WorkShop C 5.0
                COPTS1="$COPTS1 -fsimple=2 -xsafe=mem"
            elif test "$version" = "cc: Sun WorkShop 6 update 1 C 5.2 2000/09/11" ; then
                if test $MODE = "debug" ; then
                    CFLAGS="-v -g -xs"
                else
                    CFLAGS="-v"
                fi
                if test $MODE = "safe" ; then
                    if test "$SGI_ABI" = "n64" ; then
                        ARCH="-xarch=v9"
                        arch="sparcv9"
                    else
                        ARCH=""
                        arch="sparc"
                    fi
                    COPTS1="-fast -xO5 -xtarget=generic $ARCH -xcrossfile"
                else
                    if test -x /opt/SUNWspro/bin/fpversion ; then
                        ARCH="-`/opt/SUNWspro/bin/fpversion -foption`"
                    else
                        ARCH=""
                        for dir in $USERPATH ; do
                            if test -z "$dir" ; then
                                continue
                            fi
                            if test -x "$dir/fpversion" ; then
                                ARCH="-`$dir/fpversion -foption 2> /dev/null`"
                                break
                            fi
                        done
                    fi
                    # -xarch=v9a slower than nothing!
                    arch="sparc"
                    case "$arch" in
                        sparc)           ;;
                        sparcv9+vis)     if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plusa"
                                             arch="sparcv8plus+vis"
                                         else
                                             ARCH="$ARCH -xarch=v9a"
                                             CSOFLAG="-xcode=pic32"
                                         fi
                                         ;;
                        sparcv9*)        if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plus"
                                             arch="sparcv8plus" 
                                         else
                                             ARCH="$ARCH -xarch=v9"
                                             CSOFLAG="-xcode=pic32"
                                             arch="sparcv9"
                                         fi
                                         ;;
                        sparcv8plus+vis) ARCH="$ARCH -xarch=v8plusa"
                                         ;;
                        sparcv8plus)     ARCH="$ARCH -xarch=v8plus"
                                         ;;
                        sparcv8-fsmuld)  ARCH="$ARCH -xarch=v8a"
                                         ;;
                        sparcv8*)        ARCH="$ARCH -xarch=v8"
                                         arch="sparcv8"
                                         ;;
                        sparcv7*)        ARCH="$ARCH -xarch=v7"
                                         arch="sparc"
                                         ;;
                        *)               arch="unknown"
                                         ;;
                    esac
                    if test $MODE = "fast" ; then
                        COPTS1="-fast -xO5 $ARCH -xcrossfile"
                    else
                        COPTS1="-fast -xO3 $ARCH"
                    fi
                fi
                COPTS1="$COPTS1 -xdepend -fsimple=2 -xsafe=mem"
            elif test "$version" = "cc: Sun WorkShop 6 update 2 C 5.3 2001/05/15" ; then
                if test $MODE = "debug" ; then
                    CFLAGS="-v -g -xs"
                else
                    CFLAGS="-v"
                fi
                if test $MODE = "safe" ; then
                    if test "$SGI_ABI" = "n64" ; then
                        ARCH="-xarch=v9"
                        arch="sparcv9"
                    else
                        ARCH=""
                        arch="sparc"
                    fi
                    COPTS1="-fast -xO5 -xtarget=generic $ARCH -xcrossfile"
                else
                    if test -x /opt/SUNWspro/bin/fpversion ; then
                        ARCH="-`/opt/SUNWspro/bin/fpversion -foption`"
                    else
                        ARCH=""
                        for dir in $USERPATH ; do
                            if test -z "$dir" ; then
                                continue
                            fi
                            if test -x "$dir/fpversion" ; then
                                ARCH="-`$dir/fpversion -foption 2> /dev/null`"
                                break
                            fi
                        done
                    fi
                    # -xarch=v9a slower than nothing!
                    arch="sparc"
                    case "$arch" in
                        sparc)           ;;
                        sparcv9+vis)     if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plusa"
                                             arch="sparcv8plus+vis"
                                         else
                                             ARCH="$ARCH -xarch=v9a"
                                             CSOFLAG="-xcode=pic32"
                                         fi
                                         ;;
                        sparcv9*)        if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plus"
                                             arch="sparcv8plus" 
                                         else
                                             ARCH="$ARCH -xarch=v9"
                                             CSOFLAG="-xcode=pic32"
                                             arch="sparcv9"
                                         fi
                                         ;;
                        sparcv8plus+vis) ARCH="$ARCH -xarch=v8plusa"
                                         ;;
                        sparcv8plus)     ARCH="$ARCH -xarch=v8plus"
                                         ;;
                        sparcv8-fsmuld)  ARCH="$ARCH -xarch=v8a"
                                         ;;
                        sparcv8*)        ARCH="$ARCH -xarch=v8"
                                         arch="sparcv8"
                                         ;;
                        sparcv7*)        ARCH="$ARCH -xarch=v7"
                                         arch="sparc"
                                         ;;
                        *)               arch="unknown"
                                         ;;
                    esac
                    if test $MODE = "fast" ; then
                        COPTS1="-fast -xO5 $ARCH -xcrossfile"
                    else
                        COPTS1="-fast -xO3 $ARCH"
                    fi
                fi
                COPTS1="$COPTS1 -fsimple=2 -xsafe=mem"
            else
                # "cc: Forte Developer 7 C 5.4 2002/03/09"
                if test $MODE = "debug" ; then
                    CFLAGS="-g -xs"
                else
                    CFLAGS=""
                fi
                if test $MODE = "safe" ; then
                    if test "$SGI_ABI" = "n64" ; then
                        ARCH="-xarch=v9"
                        arch="sparcv9"
                    else
                        ARCH=""
                        arch="sparc"
                    fi
                    COPTS1="-fast -xO5 -xtarget=generic $ARCH -xcrossfile"
                else
                    if test -x /opt/SUNWspro/bin/fpversion ; then
                        ARCH="-`/opt/SUNWspro/bin/fpversion -foption`"
                    else
                        ARCH=""
                        for dir in $USERPATH ; do
                            if test -z "$dir" ; then
                                continue
                            fi
                            if test -x "$dir/fpversion" ; then
                                ARCH="-`$dir/fpversion -foption 2> /dev/null`"
                                break
                            fi
                        done
                    fi
                    # -xarch=v9a slower than nothing!
                    arch="sparc"
                    case "$arch" in
                        sparc)           ;;
                        sparcv9+vis)     if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plusa"
                                             arch="sparcv8plus+vis"
                                         else
                                             ARCH="$ARCH -xarch=v9a"
                                             CSOFLAG="-xcode=pic32"
                                         fi
                                         ;;
                        sparcv9*)        if test "$SGI_ABI" = "n32" ; then
                                             ARCH="$ARCH -xarch=v8plus"
                                             arch="sparcv8plus" 
                                         else
                                             ARCH="$ARCH -xarch=v9"
                                             CSOFLAG="-xcode=pic32"
                                             arch="sparcv9"
                                         fi
                                         ;;
                        sparcv8plus+vis) ARCH="$ARCH -xarch=v8plusa"
                                         ;;
                        sparcv8plus)     ARCH="$ARCH -xarch=v8plus"
                                         ;;
                        sparcv8-fsmuld)  ARCH="$ARCH -xarch=v8a"
                                         ;;
                        sparcv8*)        ARCH="$ARCH -xarch=v8"
                                         arch="sparcv8"
                                         ;;
                        sparcv7*)        ARCH="$ARCH -xarch=v7"
                                         arch="sparc"
                                         ;;
                        *)               arch="unknown"
                                         ;;
                    esac
                    if test $MODE = "fast" ; then
                        COPTS1="-fast -xO5 $ARCH -xcrossfile"
                    else
                        COPTS1="-fast -xO3 $ARCH"
                    fi
                fi
                COPTS1="$COPTS1 -fsimple=2 -xsafe=mem"
            fi

            #CFLAGS = "$CFLAGS -Xc -xtransition"
            COPTS2="$COPTS1"
        elif test "$osmaj" -eq 4 ; then
            ostype="sunos"
            COPTS1="-O2"
            COPTS2="-O4"
        elif test "$osmaj" -eq 3 ; then
            ostype="sunos"
            COPTS1="-O2"
            if test $MODE = "fast"; then
                COPTS2="-O4 -f68881"
                arch="fp"
            else
                COPTS2="-O4"
            fi
        fi
        ;;

    IRIX64)
        ostype="irix"
        SYSSQRTLIB=

        CC="/usr/bin/cc"
        CXX="/usr/bin/CC"
        CXXAR="$CXX -ar -o"
        LSOFLAGS="-shared"
        GLDLIBS="-lGLU -lGL -lm -lXext -lX11"

        case "$SGI_ABI" in
            -32|-o32|32|o32) SGI_ABI="o32"
                             ABI="-32"
                             ;;
            -n32|n32)        SGI_ABI="n32"
                             PVM_ARCH="SGI"
                             ABI="-n32"
                             ;;
            -64|-n64|64|n64) SGI_ABI="n64"
                             PVM_ARCH="SGI64"
                             LOCALLIBS="-L/usr/local/lib/mabi=64"
                             ostype="irix64"
                             ABI="-64"
                             ;;
            *)               SGI_ABI="n32"
                             PVM_ARCH="SGI"
                             ABI="-n32"
                             ;;
        esac

        if test $MODE = "fast" ; then
            CFLAGS="-signed -fullwarn -woff 1209,1424"
            if test $SGI_ABI = "o32" ; then
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                case `hinv -t cpu | cut -d" " -f3` in
                    R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                    R4*)                    arch="mips3"   ;;
                    R6*)                    arch="mips2"   ;;
                    R2*|R3*)                arch="mips1"   ;;
                    *)                      arch="unknown" ;;
                esac
            else
                # -IPA bug in MIPSPro compilers
                # IPNUM=`uname -m | tr IP ip`
                # if test $IPNUM = ip22 || test $IPNUM = ip32 ; then
                #     case `hinv -t cpu | cut -d" " -f3` in
                #         R10000) IPNUM=$IPNUM"_10k" ;;
                #         R5000)  IPNUM=$IPNUM"_5k"  ;;
                #         R4400)  IPNUM=$IPNUM"_4k"  ;;
                #     esac
                # fi
                # arch="$IPNUM"
                # COPTS2="-Ofast=$IPNUM -IPA"
                # LOPTS="-IPA"
                case `hinv -t cpu | cut -d" " -f3` in
                    R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                    *)                      arch="mips3"   ;;
                esac
                ABI="$ABI -$arch"
                COPTS1="-O3 -OPT:Olimit=0"
                COPTS2="-O3 -OPT:Olimit=0"
            fi
        elif test $MODE = "debug" ; then
            CFLAGS="-g3 -signed -fullwarn -woff 1209,1424"
            if test $SGI_ABI = "o32" ; then
                ABI="$ABI -mips2"
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                arch="mips2"
            else
                ABI="$ABI -mips4"
                COPTS1="-O2 -OPT:Olimit=0"
                COPTS2="-O2 -OPT:Olimit=0"
                arch="mips4"
            fi
        else
            CFLAGS="-signed -fullwarn -woff 1209,1424"
            if test $SGI_ABI = "o32" ; then
                ABI="$ABI -mips2"
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                arch="mips2"
            else
                ABI="$ABI -mips4"
                COPTS1="-O2 -OPT:Olimit=0"
                COPTS2="-O2 -OPT:Olimit=0"
                arch="mips4"
            fi
        fi

        case `$CC -version 2>&1 | cut -d" " -f4` in
            7.3*) CXXFLAGS="-LANG:std -ptused" ;;
            7.4*) CXXFLAGS="-ptused -FE:eliminate_duplicate_inline_copies"
                  CXXFLAGS="$CXXFLAGS -FE:template_in_elf_section"
                  LSOFLAGS="-shared -LD_MSG:off=15,84,171"
                  LFLAGS="$LFLAGS -LD_MSG:off=15,84,171"
                  LFLAGS="$LFLAGS -LD_LAYOUT:lgot_buffer=50"
                  ;;
        esac
        ;;

    IRIX)
        ostype="irix"
        CC="/usr/bin/cc"
        CXX="/usr/bin/CC"
        CXXAR="$CXX -ar -o"
        LSOFLAGS="-shared"
        GLDLIBS="-lGLU -lGL -lm -lXext -lX11"

        case "$SGI_ABI" in
            -32|-o32|32|o32)          SGI_ABI="o32"
                                      ABI="-32"
                                      ;;
            -n32|-n64|-64|n32|n64|64) SGI_ABI="n32"
                                      PVM_ARCH="SGI"
                                      ABI="-n32"
                                      ;;
            *)                        SGI_ABI="n32"
                                      PVM_ARCH="SGI"
                                      ABI="-n32"
                                      ;;
        esac

        if test "$osmaj" -ge 6 ; then
            SYSSQRTLIB=

            if test "$MODE" = "fast" ; then
                CFLAGS="-signed -fullwarn -woff 1209,1424"
                if test "$SGI_ABI" = "o32" ; then 
                    COPTS1="-O2 -Olimit 9999"
                    COPTS2="-O2 -Olimit 9999"
                    case `hinv -t cpu | cut -d" " -f3` in
                        R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                        R4*)                    arch="mips3"   ;;
                        R6*)                    arch="mips2"   ;;
                        R2*|R3*)                arch="mips1"   ;;
                        *)                      arch="unknown" ;;
                    esac
                else
                    # -IPA bug in MIPS Pro Compilers
                    # IPNUM=`/bin/uname -m|tr IP ip`
                    # if test $IPNUM = ip22 || test $IPNUM = ip32 ; then
                    #     case `hinv -t cpu | cut -d" " -f3` in
                    #         R10000) IPNUM=$IPNUM"_10k" ;;
                    #         R5000)  IPNUM=$IPNUM"_5k"  ;;
                    #         R4400)  IPNUM=$IPNUM"_4k"  ;;
                    #     esac
                    # fi
                    # arch="$IPNUM"
                    # COPTS2="-Ofast=$IPNUM -IPA"
                    # LOPTS="-IPA"
                    case `hinv -t cpu | cut -d" " -f3` in
                        R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                        *)                      arch="mips3"   ;;
                    esac
                    ABI="$ABI -$arch"
                    COPTS1="-O3 -OPT:Olimit=0"
                    COPTS2="-O3 -OPT:Olimit=0"
                fi
            elif test $MODE = "debug" ; then
                CFLAGS="-g3 -signed -fullwarn -woff 1209,1424"
                if test "$SGI_ABI" = "o32" ; then
                    COPTS1="-O2 -Olimit 9999"
                    COPTS2="-O2 -Olimit 9999"
                else
                    COPTS1="-O2 -OPT:Olimit=0"
                    COPTS2="-O2 -OPT:Olimit=0"
                fi
                case `hinv -t cpu | cut -d" " -f3` in
                    R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                    R4*)                    arch="mips3"   ;;
                    R6*)                    arch="mips2"   ;;
                    R2*|R3*)                arch="mips1"   ;;
                    *)                      arch="unknown" ;;
                esac
            else
                CFLAGS="-signed -fullwarn -woff 1209,1424"
                if test $SGI_ABI = "o32" ; then
                    ABI="$ABI -mips2"
                    COPTS1="-O2 -Olimit 9999"
                    COPTS2="-O2 -Olimit 9999"
                    arch="mips2"
                else
                    ABI="$ABI -mips4"
                    COPTS1="-O2 -OPT:Olimit=0"
                    COPTS2="-O2 -OPT:Olimit=0"
                    arch="mips4"
                fi
            fi
        elif test "$osmaj" -eq 5 ; then
            if test "$MODE" = "fast" ; then
                CFLAGS="-signed -fullwarn"
                ABI="-mips2"
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                arch="mips2"
            elif test "$MODE" = "debug" ; then
                CFLAGS="-g3 -signed -fullwarn"
                ABI="-mips2"
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                arch="mips2"
            else
                CFLAGS="-signed -fullwarn"
                ABI="-mips1"
                COPTS1="-O2 -Olimit 9999"
                COPTS2="-O2 -Olimit 9999"
                arch="mips1"
            fi
        else
            SYSMPLIBS="-lmpc"
            ABI=

            if test $MODE = "debug" ; then
                CFLAGS="-g -signed -fullwarn"
                COPTS1=" "
                COPTS2=" "
            else
                CFLAGS="-signed -fullwarn"
                COPTS1="-O2"
                COPTS2="-O2"
            fi
        fi

        case `$CC -version 2>&1 | cut -d" " -f4` in
            7.3*) CXXFLAGS="-LANG:std -ptused" ;;
            7.4*) CXXFLAGS="-ptused -FE:eliminate_duplicate_inline_copies"
                  CXXFLAGS="$CXXFLAGS -FE:template_in_elf_section"
                  LSOFLAGS="-shared -LD_MSG:off=15,84,171"
                  LFLAGS="$LFLAGS -LD_MSG:off=15,84,171"
                  LFLAGS="$LFLAGS -LD_LAYOUT:lgot_buffer=50"
                  ;;
        esac
        ;;

    Darwin)
        ostype="darwin"
        #if test -x /Developer/Tools/CpMac; then
        #   CP="/Developer/Tools/CpMac"
        #fi
       
        if test "$usexlc" == 1; then
            CC="/opt/ibmcmp/vacpp/6.0/bin/xlc"
            CXX="/opt/ibmcmp/vacpp/6.0/bin/xlC"
            COMPILER="xlC"
            LOCALINCS="-I/usr/local/include"
            if test $MODE = "debug" ; then
                CFLAGS="-g -qchars=signed -qproto -qcpluscmt -qtemplateregistry"
            else
                CFLAGS="-qchars=signed -qproto -qcpluscmt -qtemplateregistry"
            fi
            COPTS1="-O3 -qstrict -qfold -qignerrno"
            COPTS2="-O3 -qstrict -qfold -qignerrno"
            CXXFLAGS="-qrtti"            
            LFLAGS="-Wl,-x"
            LOPTS="-qipa"
            HASSHARED="no"
        else
            CC="/usr/bin/cc"
            CXX="/usr/bin/c++"
            CXXAR="/usr/bin/ar rc"
            CSOFLAGS="-dynamic -fPIC -fno-common"
            LOCALINCS="-I/sw/include"
            ARCH=
            case `machine` in
                ppc970)  arch="G5"
                         if test $MODE = "fast" ; then
                            ARCH="-fast -falign-loops=32 -mcpu=970 -mtune=970"
                         else
                            ARCH="-falign-loops=32 -mcpu=970 -mtune=970"
                         fi
                         ;;
                ppc7450) arch="G4"
                         ;;
                      *) arch="G3"
                         ;;
            esac
            if test $MODE = "debug" ; then
                CFLAGS="-g -W -Wall -pedantic -Wno-long-long -Wno-long-double"
                COPTS1="-ffast-math $ARCH"
                COPTS2="-ffast-math -funroll-loops $ARCH"
            else
                CFLAGS="-W -Wall -Wno-long-double"
                if test "$useprof" = 0 ; then
                    COPTS="-fomit-frame-pointer -ffast-math"
                else
                    COPTS="-ffast-math"
                fi
                COPTS1="-O2 $COPTS $ARCH"
                COPTS2="-O2 $COPTS -funroll-loops $ARCH"
                LFLAGS="-Wl,-x"
            fi
            if test "$useprof" = 1 ; then
                ABI="-pg"
                LFLAGS=
            fi
        fi    
        RANLIB="/usr/bin/ranlib"
        LOCALLIBS="-L/usr/local/lib -L/sw/lib"
        X11INCS="-I/usr/X11R6/include"
        X11LIBS="-L/usr/X11R6/lib"
        GLINCS="-I/System/Library/Frameworks/OpenGL.framework/Headers -I/System/Library/Frameworks/AGL.framework/Headers"
        GLDLIBS="-framework AGL -framework OpenGL -framework Carbon -framework ApplicationServices"
        LSOFLAGS="-dynamiclib -undefined dynamic_lookup -single_module -headerpad_max_install_names"
        REZ="/Developer/Tools/Rez"
        DLL=".dylib"
        ISMAC="yes"
        
        ;;

    Linux)
        ostype="linux"
        LSOFLAGS="-shared"
        DSOLIBS="-ldl"
        LOCALINCS=
        LOCALLIBS=
        ARCH=""
        LFS_SUPPORT=`getconf LFS_CFLAGS`

        version=`grep Linux /etc/issue`
        if test "$version" = "Red Hat Linux release 9 (Shrike)" ; then
          ostype="redhat"
          osver="9.0"
        elif test "$version" = "Red Hat Linux release 8.0 (Psyche)" ; then
          ostype="redhat"
          osver="8.0"
        elif test "$version" = "Red Hat Linux release 7.3 (Valhalla)" ; then
          ostype="redhat"
          osver="7.3"
        elif test "$version" = "Red Hat Linux release 7.2 (Enigma)" ; then
          ostype="redhat"
          osver="7.2"
        elif test "$version" = "Red Hat Linux release 7.1 (Seawolf)" ; then
          ostype="redhat"
          osver="7.1"
        elif test "$version" = "Red Hat Linux release 7.0 (Guinness)" ; then
          ostype="redhat"
          osver="7.0"
        elif test "$version" = "Red Hat Linux release 6.2 (Zoot)" ; then
          ostype="redhat"
          osver="6.2"
        elif test "$version" = "Red Hat Linux release 6.1 (Cartman)" ; then
          ostype="redhat"
          osver="6.1"
        elif test "$version" = "Red Hat Linux release 6.0 (Hedwig)" ; then
          ostype="redhat"
          osver="6.0"
        elif test "$version" = \
            "Red Hat Enterprise Linux AS release 3 (Taroon Update 2)" ; then
          ostype="redhat"
          osver="3.2AS"
        elif test "$version" = \
            "Red Hat Enterprise Linux WS release 3 (Taroon)" ; then
          ostype="redhat"
          osver="3.0WS"
        elif test "$version" = \
            "Red Hat Linux Advanced Server release 2.1AS (Derry)" ; then
          ostype="redhat"
          osver="2.1AS"
        elif test "$version" = \
            "Welcome to SuSE Linux 9.1 (i586) - Kernel \r (\l)." ; then
          ostype="suse"
          osver="9.1"
        elif test "$version" = \
            "Welcome to SuSE Linux 9.1 (x86-64) - Kernel \r (\l)." ; then
          ostype="suse"
          osver="9.1"
        elif test "$version" = \
            "Welcome to SuSE Linux 9.0 (i586) - Kernel \r (\l)." ; then
          ostype="suse"
          osver="9.0"
        elif test "$version" = \
            "Welcome to SuSE Linux 8.2 (i586) - Kernel \r (\l)." ; then
          ostype="suse"
          osver="8.2"
        elif test "$version" = \
            "Yellow Dog Linux release 3.0 (Sirius)" ; then
          ostype="ydl"
          osver="3.0"
        elif test "`grep Fedora /etc/issue`" = \
           "Fedora Core release 1 (Yarrow)" ; then
          ostype="redhat"
          osver="FC1"
        elif test "`grep SLES /etc/issue`" = \
           "Welcome to SuSE SLES 8 (ppc) - Kernel \r (\l)." ; then
          ostype="suse"
          osver="SLES8" 
        fi

        if test "$useicc" = 1; then
            COMPILER="intel"
            LFLAGS=""
            if test `uname -m` = "ia64" ; then
                AOPTS=""
                for dir in $USERPATH ; do
                    if test -z "$dir" ; then
                        continue
                    fi
                    if test -x "$dir/ecc" ; then
                        CC="$dir/ecc"
                        break
                    fi
                done
            else
                AOPTS="-rcd -mp1"
                for dir in $USERPATH ; do
                    if test -z "$dir" ; then
                        continue
                    fi
                    if test -x "$dir/icc" ; then
                        CC="$dir/icc"
                        break
                    fi
                done
                if test -z "$CC" ; then
                    if test -x /opt/intel/compiler70/ia32/bin/icc ; then
                        CC="/opt/intel/compiler70/ia32/bin/icc"
                    fi
                fi
            fi
            CXX="$CC"
            if test "$MODE" = "fast" ; then
                case `uname -m` in 
                    ia64) arch="ia64"
                          ARCH="-tpp2"
                          ;;

                    i686) pentium4=`grep "XEON" /proc/cpuinfo`
                          if test -n "$pentium4" ; then
                              arch="pentium4"
                              ARCH="-tpp7"
                          else
                              arch="i686"
                              ARCH="-tpp6"
                          fi
                          ;;

                    *)    arch="i586"
                          ARCH="-tpp7"
                          ;;
                esac
                COPTS1="-O3 -Ob2 -ip $AOPTS $ARCH"
                COPTS2="-O3 -Ob2 -ip $AOPTS $ARCH"
            else
                COPTS1="-O3 -Ob2 -ip $AOPTS"
                COPTS2="-O3 -Ob2 -ip $AOPTS"
            fi
        else
            if test -x /usr/bin/cc ; then
                CC="/usr/bin/cc"
            else
                CC="/usr/bin/gcc"
            fi

            if test -x /usr/bin/c++ ; then
                CXX="/usr/bin/c++"
            else
                CXX="/usr/bin/g++"
            fi

            gccver=`$CC --version | head -1 | cut -d" " -f3`
            egcsver=`echo $gccver | grep egcs- | cut -d- -f2`
            if test -n "$egcsver" ; then
                gccver="$egcsver"
            fi
            gccmaj=`echo $gccver | cut -d. -f1`
            gccmin=`echo $gccver | cut -d. -f2`
            COMPILER="g++$gccmaj.$gccmin"
            if test "$MODE" = "fast" ; then
                case `uname -m` in 
                    i686) if test $gccmaj -ge 3 ; then
                              if test $gccmin -ge 1 ; then
                                  athlon=`grep Athlon /proc/cpuinfo`
                                  xeon=`grep XEON /proc/cpuinfo`
                                  pentium3=`grep "Pentium.* III" /proc/cpuinfo`
                                  pentium4=`grep "Pentium(R) 4" /proc/cpuinfo`
                                  if test -n "$athlon" ; then 
                                      arch="athlon"
                                      ARCH="-march=athlon"
                                  elif test -n "$pentium3" ; then
                                      arch="pentium3"
                                      ARCH="-march=pentium3"
                                  elif test -n "$xeon" ; then
                                      arch="pentium4"
                                      ARCH="-march=pentium4"
                                  elif test -n "$pentium4" ; then
                                      arch="pentium4"
                                      ARCH="-march=pentium4"
                                  else
                                      arch="i686"
                                      ARCH="-march=pentiumpro"
                                  fi
                              else
                                  athlon=`grep Athlon /proc/cpuinfo`
                                  if test -n "$athlon" ; then 
                                      arch="athlon"
                                      ARCH="-march=athlon"
                                  else
                                      arch="i686"
                                      ARCH="-march=pentiumpro"
                                  fi
                              fi
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i686"
                                  ARCH="-mpentiumpro"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i586) if test $gccmaj -ge 3 ; then
                              arch="i586"
                              ARCH="-march=pentium"
                          elif test $gccmaj -gt 2 ; then
                              arch="i586"
                              ARCH="-mpentium"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i586"
                                  ARCH="-mpentium"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i486) if test $gccmaj -ge 3 ; then
                              arch="i486"
                              ARCH="-march=486"
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i386) arch="i386"
                          ;;

                    ppc)   arch="ppc"
                           ;;


                    ppc64) power4=`grep POWER4 /proc/cpuinfo`
                           power3=`grep POWER3 /proc/cpuinfo`
                           if test -n "$power4" ; then 
                             arch="power4"
                             ARCH="-mcpu=power4"
                           elif test -n "$power3" ; then
                             arch="power3"
                             ARCH="-mcpu=power3"
                           elif test "$SGI_ABI" = "n64" ; then
                             arch="ppc64"
                             ABI="-m64"
                           else
                             arch="ppc32"
                             ABI="-m32"
                           fi
                           ;;

                    ia64)   arch="ia64"
                            ;;

                    s390)   arch="s390"
                            ;;

                    x86_64) if test "$SGI_ABI" = "n32" ; then
                              arch="i586"
                            else
                              arch="x86_64"
                            fi
                            ;;

                    *)      arch="unknown"
                            ;;
                esac
            else
                case `uname -m` in 
                    ppc64)  # Native SLES8 compiler doesn't understand
                            # the -m32 or -m64 command line options!
                            if test "$osver" = "SLES8" ; then
                              arch="ppc32"
                            elif test "$SGI_ABI" = "n64" ; then
                              arch="ppc64"
                            else
                              arch="ppc32"
                            fi
                            ;;
                    x86_64) if test "$SGI_ABI" = "n32" ; then
                              arch="i586"
                            else
                              arch="x86_64"
                            fi
                            ;;
                    i686)   arch="i586"    ;;
                    i586)   arch="i586"    ;;
                    i486)   arch="i386"    ;;
                    i386)   arch="i386"    ;;
                    ppc)    arch="ppc"     ;;
                    ia64)   arch="ia64"    ;;
                    s390)   arch="s390"    ;;
                    *)      arch="unknown" ;;
                esac
            fi
            if test $MODE = "debug" ; then
                CFLAGS="-g -W -Wall -pedantic -Wno-long-long $LFS_SUPPORT"
                COPTS1="-ffast-math $ARCH"
                COPTS2="-ffast-math -funroll-loops $ARCH"
            else
                CFLAGS="-W -Wall $LFS_SUPPORT"
                if test "$useprof" = 0 ; then
                   COPTS="-fomit-frame-pointer -ffast-math"
                else
                   COPTS="-ffast-math"
                fi
                COPTS1="-O3 $COPTS $ARCH"
                COPTS2="-O3 $COPTS -funroll-loops $ARCH"
            fi
            case `uname -m` in
              ia64)
                HASSHARED="no"
                ;;
              x86_64)
                if test "$SGI_ABI" = "n32" ; then
                  ABI="-m32"
                else
                  CSOFLAGS="-fPIC"
                  ABI="-m64"
                fi
                ;;
              ppc)
                CFLAGS="$CFLAGS -fsigned-char"
                ;;
              ppc64)
                CFLAGS="$CFLAGS -fsigned-char"
                if test "$osver" = "SLES8" ; then
                  ABI=""
                elif test "$SGI_ABI" = "n64" ; then
                  ABI="-m64"
                else
                  ABI="-m32"
                fi
                ;;
            esac
        fi
        if test "$useprof" = 1 ; then
          ABI="-pg $ABI"
          LFLAGS=
        fi
        if test -f /usr/lib/libpthread.a; then
          SYSMPLIBS="-lpthread"
        fi
        for dir in /usr/X11R6 /usr/X11R5 ; do
            if test -d "$dir" ; then
                X11INCS="-I$dir/include"
                case `uname -m` in
                    x86_64) 
                      if test "$SGI_ABI" = "n32" ; then
                        X11LIBS="-L$dir/lib"
                      else
                        X11LIBS="-L$dir/lib64"
                      fi
                      ;;
                    ppc64) 
                      if test "$SGI_ABI" = "n64" ; then
                        X11LIBS="-L$dir/lib64"
                      else
                        X11LIBS="-L$dir/lib"
                      fi
                      ;;
                    *)
                      X11LIBS="-L$dir/lib"
                      ;;
                esac
                GLDLIBS="$X11LIBS -lGLU -lGL -ldl"
                for lib in ICE SM Xrender Xinerama Xrandr Xft freetype fontconfig Xcursor; do
                    if test -r "$dir/lib/lib$lib.a" ; then
                        GLDLIBS="$GLDLIBS -l$lib"
                    fi
                done
                GLDLIBS="$GLDLIBS -lXext -lX11"
                break
            fi
        done
        ;;

    CYGWIN*)
        EXE=".exe"
        DLL=".dll"
        MWINDOWS="-mwindows"
        if test "$usemsvc" = 0 && test "$useicc" = 0; then
            CC="/usr/bin/gcc"
            CXX="/usr/bin/g++"
            WINDRES="windres -O coff -o"
            LSOFLAGS="-shared"
            LOCALINCS="-I/usr/local/include"
            LOCALLIBS="-L/usr/local/lib"
            GLDLIBS="-lglu32 -lopengl32 -lole32 -luuid -lcomctl32 -lwsock32 -lnetapi32"
            if test "$cygwin" = 0 ; then
                ostype="microsoft"
                osver="win32"
                ABI="-mno-cygwin"
                SYSSOCKLIBS="-lwsock32 -lnetapi32"
                SYSMATHLIB=""
                SYSSQRTLIB=""
            else
                ostype="cygwin"
                SYSSOCKLIBS="-lwsock32 -lnetapi32"
            fi

            ARCH=""
            gccver=`$CC --version | head -1 | cut -d" " -f3`
            egcsver=`echo $gccver | grep egcs- | cut -d- -f2`
            if test -n "$egcsver" ; then
                gccver="$egcsver"
            fi
            gccmaj=`echo $gccver | cut -d. -f1`
            gccmin=`echo $gccver | cut -d. -f2`
            COMPILER="g++$gccmaj.$gccmin"
            if test "$MODE" = "fast" ; then
                case `uname -m` in 
                    i686) if test $gccmaj -ge 3 ; then
                              arch="i686"
                              ARCH="-march=pentiumpro"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i686"
                                  ARCH="-mpentiumpro"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;
    
                    i586) if test $gccmaj -ge 3 ; then
                              arch="i586"
                              ARCH="-march=pentium"
                          elif test $gccmaj -gt 2 ; then
                              arch="i586"
                              ARCH="-mpentium"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i586"
                                  ARCH="-mpentium"
                              else
                                  arch="i486"
                                      ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;
    
                    i486) if test $gccmaj -ge 3 ; then
                              arch="i486"
                              ARCH="-march=486"
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i386) arch="i386"
                          ;;
                    *)    arch="unknown"
                          ;;
                esac
            else
                case `uname -m` in 
                    i686) arch="i586" ;;
                    i586) arch="i586" ;;
                    i486) arch="i386" ;;
                    i386) arch="i386" ;;
                    *)    arch="unknown"
                          ;;
                esac
            fi
            if test $MODE = "debug" ; then
                CFLAGS="-g -W -Wall -pedantic -Wno-long-long"
                COPTS1="-ffast-math $ARCH"
                COPTS2="-ffast-math -funroll-loops $ARCH"
            else
                CFLAGS="-W -Wall"
                if test "$useprof" = 0 ; then
                    COPTS="-ffast-math"
#  removed b/c of program crashes --mts
#  COPTS="-fomit-frame-pointer -ffast-math"
                else
                    COPTS="-ffast-math"
                fi
                COPTS1="-O3 $COPTS $ARCH"
                COPTS2="-O3 $COPTS -funroll-loops $ARCH"
            fi
            if test "$useprof" = 1 ; then
                ABI="$ABI -pg"
                LFLAGS=
            fi
        elif test "$usemsvc" = 1; then 
            ostype="microsoft"
            osver="win32"
            arch="i586"

            CC="`pwd`/msvc"
            for dir in $USERPATH ; do
                if test -z "$dir" ; then
                    continue
                fi
                if test -x "$dir/msvc" ; then
                    CC="$dir/msvc"
                    break
                fi
            done

            if test -x $CC ; then
              true
            else
              TMPCC=`pwd`/$VPATH/etc/msvc
              if test -x $TMPCC ; then
                CC=$TMPCC
              fi
            fi

            if test -x $CC ; then
              true
            else
              TMPCC=$VPATH/etc/msvc
              if test -x $TMPCC ; then
                CC=$TMPCC
              fi
            fi

            COMPILER="msvc"
            LD="$CC"
            CXX="$CC"
            CXXAR="$CC -ar"
            EXE=".exe"
            OBJ=".obj"
            SOBJ=".sobj"
            LIB=".lib"
            SYSMATHLIB=""
            SYSSOCKLIBS="-lwsock32 -lnetapi32 -ladvapi32"
            SYSSQRTLIB=""
            LFLAGS=
            LIBPREFIX=""
            LN="cp -r"
            LOCALINCS=
            LOCALLIBS=
            PVM_ARCH="WIN32"
            PVM_ROOT=
            GLDLIBS="-lglu32 -lopengl32 -lole32 -luuid -lcomctl32 -lwsock32 -lnetapi32 -lgdi32 -lkernel32 -luser32 -ladvapi32 -lshell32"
            FLTKINCS="-DWIN32"
            HASSHARED="yes"
            VSDIR=
            for dir in Micros~1 Micros~2 Micros~3 Micros~4 ; do
                if test -d "/cygdrive/c/Progra~1/$dir/VC98" ; then
                    VSDIR="$dir"
                    TEMP="C:\\\\Progra~1\\\\$VSDIR\\\\VC98\\\\include"
                    WINDRES="c:/Progra~1/$VSDIR/Common/MSDev98/Bin/RC"
                    WINDRES="$WINDRES /i \"$TEMP\" /fo"
                    break
                fi
            done
            for dir in Micros~1.NET Micros~2.NET MSVC ; do
                if test -d "/cygdrive/c/Progra~1/$dir/VC7" ; then
                    VSDIR="$dir"
                    TEMP="C:\\\\Progra~1\\\\$VSDIR\\\\VC7\\\\include"
                    WINDRES="c:/Progra~1/$VSDIR/Common7/Tools/Bin/RC"
                    WINDRES="$WINDRES /i \"$TEMP\" /fo"
                    break
                fi
            done

            case `uname -m` in 
                i686) ARCH="/G6"
                      arch="i686"
                      ;;
                i586) ARCH="/G5"
                      arch="i586"
                      ;;
                i486) ARCH="/G4"
                      arch="i486"
                      ;;
                *)    ARCH=""
                      ;;
            esac

            if test $MODE = "debug" ; then
                LSOFLAGS="-shared /DEBUG"
                CFLAGS="/W3 /Z7 /GR /GX /MDd /Zc:forScope"
                COPTS1="/Od $ARCH"
                COPTS2="/Od $ARCH"
                LFLAGS="/Z7 /DEBUG /F16000000 /MDd"
            else
                CFLAGS="/W3 /GR /GX /MD /Zc:forScope"
                COPTS1="/O2 /Ob2 $ARCH"
                COPTS2="/O2 /Ob2 $ARCH"
                LFLAGS="/F16000000 /MD"
                LSOFLAGS="-shared"
            fi
        elif test "$useicc" = 1; then 
            ostype="microsoft"
            osver="win32"
            arch="i586"

            CC="`pwd`/icc"
            for dir in $USERPATH ; do
                if test -z "$dir" ; then
                    continue
                fi
                if test -x "$dir/icc" ; then
                    CC="$dir/icc"
                    break
                fi
            done

            COMPILER="wintel"
            LD="$CC"
            CXX="$CC"
            CXXAR="icc -ar"
            EXE=".exe"
            OBJ=".obj"
            SOBJ=".sobj"
            LIB=".lib"
            SYSSOCKLIBS="-lwsock32 -lnetapi32 -ladvapi32"
            SYSMATHLIB=""
            SYSSQRTLIB=""
            LFLAGS=
            LIBPREFIX=""
            LN="cp"
            LOCALINCS=
            LOCALLIBS=
            LSOFLAGS="-shared"
            PVM_ARCH="WIN32"
            PVM_ROOT=
            GLDLIBS="-lglu32 -lopengl32 -lole32 -luuid -lcomctl32 -lwsock32 -lnetapi32 -lgdi32 -lkernel32 -luser32 -ladvapi32 -lshell32"
            FLTKINCS="-DWIN32"
            HASSHARED="yes"

            VSDIR=
            for dir in Micros~1 Micros~2 Micros~3 Micros~4 ; do
                if test -d "/cygdrive/c/Progra~1/$dir/VC98" ; then
                    VSDIR="$dir"
                    break
                fi
            done

            TEMP="C:\\\\Progra~1\\\\$VSDIR\\\\VC98\\\\include"
            WINDRES="c:/Progra~1/$VSDIR/Common/MSDev98/Bin/RC"
            WINDRES="$WINDRES /i \"$TEMP\" /fo"

            case `uname -m` in 
                i686) ARCH="/G6"
                      arch="i686"
                      ;;
                i586) ARCH="/G5"
                      arch="i586"
                      ;;
                i486) ARCH="/G4"
                      arch="i486"
                      ;;
                *)    ARCH=""
                      ;;
            esac

            if test $MODE = "debug" ; then
                CFLAGS="/W3 /Zi /GR /GX /MDd /Zc:forScope"
                LFLAGS="/Zi /MDd /DEBUG"
                COPTS1="/Od $ARCH"
                COPTS2="/Od $ARCH"
            else
                CFLAGS="/W3 /GR /GX /MD /Zc:forScope"
                LFLAGS="/MD"
                COPTS1="/O3 /Ob2 $ARCH"
                COPTS2="/O3 /Ob2 $ARCH"
            fi
        fi
        ;;

    OSF1)
        ostype="osf1"
        osmaj=`echo $osmaj | tr -d "VTX"`
        osver="$osmaj.$osmin"

        CC="/usr/bin/cc"
        CXX="/usr/bin/cxx"
        CXXFLAGS="-D__USE_STD_IOSTREAM -tlocal"
        CMPFLAGS="-pthread -D_PTHREAD_USE_INLINE"
        LSOFLAGS="-shared -expect_unresolved \"*\""
        GLDLIBS="-lGLU -lGL -lXext -lX11"
        SYSMPLIBS="-lpthread"
        SYSKMEMLIB="-lmach"
        AR="/usr/bin/ar"

        if test "$MODE" = "debug" ; then
            # CFLAGS += "-check -portable"
            CFLAGS="-std -w0 -g3"
        else
            CFLAGS="-std -w1"
        fi
        if test "$MODE" = "fast" ; then
            line=`/usr/sbin/psrinfo -v | head -n 3 | tail -n 1`
            cpu=`echo "$line" | cut -d" " -f5`
            case "$cpu" in
                EV5.6)  rev=`echo "$line" | cut -d" " -f6`
                        if test "$rev" = "(21164PC)" ; then
                            arch="pca56"
                        else
                            arch="ev56"
                        fi
                        ;;
                EV6.8*) arch="ev68"      ;;
                EV6.7)  arch="ev67"      ;;
                EV6*)   arch="ev6"       ;;
                EV5.7)  arch="pca56"     ;;
                EV5.6)  arch="ev56"      ;;
                EV5*)   arch="ev5"       ;;
                EV4*)   arch="ev4"       ;;
                LCA4)   arch="ev4"       ;;
                *)      arch=""          ;;
            esac
            if test -z "$arch" ; then
                COPTS1="-fast -O2 -arch host"
                COPTS2="-fast -O4 -arch host"
                arch="unknown"
            else
                COPTS1="-fast -O2 -arch $arch -inline speed"
                COPTS2="-fast -O4 -arch $arch -inline speed"
            fi
            LFLAGS="-s -om"
        else
            COPTS1="-fast -O2 -inline speed"
            COPTS2="-fast -O4 -inline speed"
            case `uname -m` in
                alpha) arch="alpha"   ;;
                *)     arch="unknown" ;;
            esac
        fi
        ;;

    AIX)
        ostype="aix"
        osmaj=`uname -v`
        osmin=`uname -r`
        osver="$osmaj.$osmin"
        CC="/usr/bin/xlc"
        CXX="/usr/bin/xlC"
        HASSHARED="no"
        if test "$SGI_ABI" = "n64" ; then
            arch="ppc64"
            ABI="-q64"
            AR="/usr/bin/ar -X64"
        else
            arch="ppc32"
            ABI="-q32"
            AR="/usr/bin/ar -X32"
        fi
        if test "$MODE" = "debug" ; then
            CFLAGS="-g -qchars=signed -qproto -qcpluscmt"
            LFLAGS="-bmaxdata:0xf000000"
        else
            CFLAGS="-qchars=signed -qproto -qcpluscmt"
            LFLAGS="-s -bmaxdata:0xf000000"
        fi
        # Beware of the AIX compiler bugs at -O5!
        COPTS1="-O3 -qstrict -qfold -qignerrno -qinlglue"
        COPTS2="-O4 -qstrict -qfold -qignerrno -qinlglue"
        CXXFLAGS="-qrtti=all"
        LSOFLAGS="-G -bnoentry -bexpall"
        CSOFLAGS="-brtl -bexpall"
        SYSMPLIBS="-lpthread"
        GLDLIBS="-L/usr/X11R6/lib -lGLU -lGL -ldl -lXext -lX11"
        LOPTS="-qipa"
        ;;

    HP-UX)
        ostype="hpux"
        osmaj=`uname -r | cut -d. -f2`
        osmin=`uname -r | cut -d. -f3`
        osver="$osmaj.$osmin"
        CC="/usr/bin/cc"
        CXXFLAGS="-AA"
        CSOFLAGS="+Z -DPIC"
        LSOFLAGS="-b -Wl,+s"
        DLL=".sl"
        if test -x /usr/bin/aCC ; then
            CXX="/usr/bin/aCC"
        else
            CXX="/opt/aCC/bin/aCC"
        fi
        if test $MODE = "debug" ; then
            CFLAGS="-g"
            LFLAGS="-Wl,+s"
        else
            CFLAGS=""
            LFLAGS="-Wl,+s -s"
        fi
        cpu=`/usr/bin/getconf SC_CPU_VERSION 2> /dev/null`
        if test $MODE = "safe" ; then
            case "$cpu" in
                523|528)
                     ARCH="+DAportable"
                     arch="pa"
                     ;;

                532) if test "$SGI_ABI" = "n64" ; then
                          # This is equivalent to +DA2.0W
                          ABI="+DD64"
                          arch="pa64"
                          ARCH=""
                      else
                          # This isn't quite the same +DD32
                          ARCH="+DAportable"
                          arch="pa"
                      fi
                      ;;
                768)  
                      # ARCH="+DSblended"
                      ARCH=""
                      arch="ia64"
                      ;;
                *)
                      ARCH=""
                      arch="unknown"
                      ;;
            esac
        else
            case "$cpu" in
                523)  ARCH="+DA1.0"
                      arch="pa1.0"
                      ;;
                528)  ARCH="+DA1.1"
                      arch="pa1.1"
                      ;;
                532)  if test "$SGI_ABI" = "n64" ; then
                          ARCH="+DA2.0W"
                          ABI="+DD64"
                      else
                          ARCH="+DA2.0"
                      fi
                      arch="pa2.0"
                      ;;
                768)  ARCH="+DSitanium2"
                      arch="ia64"
                      ;;
                *)    ARCH=""
                      arch="unknown"
            esac
        fi
        if test $MODE = "debug" ; then
            COPTS1="+O2 $ARCH"
            COPTS2="+O2 $ARCH"
        else
            case "$cpu" in
                523|528|532)
                      COPTS1="+O3 +Oaggressive +FPD $ARCH"
                      COPTS2="+Oall +FPD $ARCH"
                      ;;
                768)
                      COPTS1="+Ofast +O3 $ARCH"
                      COPTS2="+Ofast +O3 $ARCH"
                      ;;
                 *)   COPTS1="+O2"
                      COPTS2="+O2"
                      arch="unknown"
                      ;;
            esac
        fi
        for dir in /usr/lib/X11R6 /usr/lib/X11R5 ; do
            if test -d "$dir" ; then
                X11LIBS="-L$dir"
                break
            fi
        done
        ;;

    ULTRIX)
        ostype="ultrix"
        ;;

    *)
        arch="unknown"
        ;;
esac

# Generate C Test Program
cat > conf.c <<EOF
int main( void ) {
    return 0;
}
EOF

if test "$usegcc" = 1 ; then
  # Ignore native C compiler
  ccok=1
  CC=
  CXX=
  ABI=
  CXXAR=
  CXXFLAGS=
  LOCALINCS=
  LOCALLIBS=
  if test $MODE = debug ; then
    LFLAGS=
  else
    LFLAGS="-s"
  fi

else
  ccok=0
fi


IFS=" "
if test -n "$CC" && test -x "$CC" ; then
    FLAGS="$ABI $CFLAGS $COPTS2 $LFLAGS $LOPTS"
    if { (eval "$CC $FLAGS -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
        echo "Using native C compiler $CC"
        echo "Using optimizing flags $FLAGS"
        ccok=1
    fi

    if test $ccok = 0 ; then
        COPTS2="$COPTS1"
        LOPTS=
        FLAGS="$ABI $CFLAGS $COPTS1 $LFLAGS"
        if { (eval "$CC $FLAGS -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
            echo "Using native C compiler $CC"
            echo "Using compiler flags $FLAGS"
            ccok=1
        fi
    fi

    if test $ccok = 0 ; then
        COPTS1="-O"
        COPTS2="-O"
        FLAGS="$ABI $CFLAGS $COPTS1 $LFLAGS"
        if { (eval "$CC $FLAGS -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
            echo "Using native C compiler $CC"
            echo "Using compiler flags $FLAGS"
            ccok=1
        fi
    fi

    if test $ccok = 0 ; then
        arch="unknown"
        ABI=
        if test $MODE = "debug" ; then
            CFLAGS="-g"
            LFLAGS=
        else
            CFLAGS=
            LFLAGS="-s"
        fi
        FLAGS="$CFLAGS $COPTS1 $LFLAGS"
        if { (eval "$CC $FLAGS -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
            echo "Using native C compiler $CC"
            echo "Using compiler flags $FLAGS"
            ccok=1
        fi
    fi

    if test $ccok = 0 ; then
        echo "Ignoring native C compiler $CC"
        CC=
    fi
elif test -n "$CC" ; then
    echo "Unable to find native C compiler $CC"
    CC=
fi
IFS=":	 "


# Find UNIX cc C Compiler
if test "$ccok" = 0 ; then
    for dir in $USERPATH ; do
        if test -z "$dir" ; then
            continue
        fi
        if test "$dir/cc" = /usr/ucb/cc ; then
            continue
        fi
        if test -x "$dir/cc" ; then
            if { (eval "$dir/cc -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CC="$dir/cc"
                break
            fi
        fi
    done

    if test -z "$CC" ; then
        if test -x /usr/ucb/cc ; then
            if { (eval "/usr/ucb/cc -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CC="/usr/ucb/cc"
            fi
        fi
    fi

    if test -n "$CC" ; then
        echo "Using C compiler $CC"
        arch="unknown"
        ABI=
        CFLAGS=
        COPTS1=
        COPTS2=
        LFLAGS=
        LOPTS=

        if test $MODE = "debug" ; then
            if { (eval "$CC -g -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CFLAGS="-g"
                LFLAGS=
            fi
        else
            if { (eval "$CC -s -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CFLAGS=
                LFLAGS="-s"
            fi
        fi

        FLAGS="$CFLAGS $LFLAGS"
        if { (eval "$CC $FLAGS -O2 -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
            COPTS1="-O2"
            COPTS2="-O2"
        elif { (eval "$CC $FLAGS -O -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
            COPTS1="-O"
            COPTS2="-O"
        fi
        echo "Using compiler flags $CFLAGS $COPTS1 $LFLAGS"
        ccok=1
    fi
fi


# Find GNU GCC C compiler
if test -z "$CC"; then
    usegcc=1
    ccok=0
    for dir in $USERPATH; do
        if test -z "$dir" ; then
            continue
        fi
        if test -x "$dir/gcc" ; then
            if { (eval "$dir/gcc -o conf conf.c ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CC="$dir/gcc"
                break
            fi
        fi
    done
fi

if test -z "$CC"; then
    if test -x /usr/local/bin/gcc ; then
        CC="/usr/local/bin/gcc"
    fi
fi

if test -z "$CC"; then
    if test -x /usr/freeware/bin/gcc ; then
        CC="/usr/freeware/bin/gcc"
    fi
fi

if test -z "$CC"; then
  echo "Error: Unable to find a suitable C compiler cc"
  rm -f conf.c conf conf.exe conf.o core
  exit 1
fi

if test "$usegcc" = 1 ; then
    echo "Using GNU C compiler $CC"
    arch="unknown"
    ABI=
    CFLAGS=
    CSOFLAGS=
    LSOFLAGS="-shared"
    LOCALINCS=
    LOCALLIBS=
    LOPTS=
    ARCH=

    gccver=`$CC --version | head -1 | cut -d" " -f3`
    egcsver=`echo $gccver | grep egcs- | cut -d- -f2`
    if test -n "$egcsver" ; then
        gccver="$egcsver"
    fi
    gccmaj=`echo $gccver | cut -d. -f1`
    gccmin=`echo $gccver | cut -d. -f2`
    COMPILER="g++$gccmaj.$gccmin"

    case `uname -s` in
        SunOS)
            # If GCC is installed disable shared, then libstdc++ gets built
            # without -fPIC, so we can't make shared libraries.
            HASSHARED="no"
            CMPFLAGS="-D_REENTRANT"
            CSOFLAGS="-fPIC"
            if test "$MODE" = fast ; then
                if test -x /usr/bin/isalist ; then
                    arch=`isalist | cut -f1 -d" "`
                fi
                if test -z "$arch" ; then
                    arch=`uname -p`
                fi
                # Not fully implemented in GCC 2.95.2
                arch=sparc
                case "$arch" in
                    sparcv9+vis)      if test "$SGI_ABI" = "n32" ; then
                                          arch="sparcv8plus+vis"
                                          ARCH="-mcpu=v8 -mvis"
                                          ABI="-m32"
                                      else
                                          ARCH="-mcpu=v9 -mvis"
                                          ABI="-m64"
                                      fi
                                      ;;
                    sparcv9*)         if test "$SGI_ABI" = "n32" ; then
                                          arch="sparcv8"
                                          ARCH="-mcpu=v8"
                                          ABI="-m32"
                                      else
                                          ARCH="-mcpu=v9"
                                          arch="sparcv9"
                                          ABI="-m64"
                                      fi
                                      ;;
                    sparcv8plus+vis)  ARCH="-mcpu=v8 -mvis" ;;
                    sparcv8*)         ARCH="-mcpu=v8"
                                      arch="sparcv8"
                                      ;;
                    *)                arch="sparc"
                                      ;;
                esac
            else
                if test "$SGI_ABI" = "n64" ; then
                  arch="sparc64"
                  ABI="-m64"
                else
                  arch="sparc"
                  ABI="-m32"
                fi
            fi
            ;;

        IRIX64)
            LD="$CC"
            CFLAGS="-fsigned-char"
            case "$SGI_ABI" in
                # Currently no -mabi=32 support for IRIX!
                -n64|-64|n64|64) ABI="-mabi=64"  ;;
                *)               ABI="-mabi=n32" ;;
            esac

            # "-mips1" and "-mips2" require "-mabi=32" support!
            # "-mips3" requires a suitable MIPS3 crtbegin.o
            if test "$MODE" = fast ; then
                case `hinv -t cpu | cut -d" " -f3` in
                    R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                    *)                      arch="mips3"   ;;
                esac
                ABI="$ABI -$arch"
            else
                ABI="$ABI -mips4"
                arch="mips4"
            fi
            ;;

        IRIX)
            LD="$CC"
            CFLAGS="-fsigned-char"
            # Currently no -mabi=32 support for IRIX!
            # "-mips1" and "-mips2" require "-mabi=32" support!
            # "-mips3" requires a suitable MIPS3 crtbegin.o
            if test "$MODE" = fast ; then
                case `hinv -t cpu | cut -d" " -f3` in
                    R14*|R12*|R10*|R8*|R5*) arch="mips4"   ;;
                    *)                      arch="mips3"   ;;
                esac
                ABI="-mabi=n32 -$arch"
            else
                ABI="-mabi=n32 -mips4"
                arch="mips4"
            fi
            ;;

        Linux)
            if test `uname -m` = "ia64" ; then
              # Shared libraries appear broken on ia64-linux
              HASSHARED="no"
            fi

            LFS_SUPPORT=`getconf LFS_CFLAGS`
            
            case `uname -m` in
              x86_64)
                if test "$SGI_ABI" = "n32" ; then
                  ABI="-m32"
                else
                  CSOFLAGS="-fPIC"
                  ABI="-m64"
                fi
                ;;
              ppc)
                CFLAGS="$CFLAGS -fsigned-char"
                ;;
              ppc64)
                CFLAGS="$CFLAGS -fsigned-char"
                if test "$SGI_ABI" = "n64" ; then
                  CFLAGS="$CFLAGS -mminimal-toc"
                  ABI="-m64"
                else
                  ABI="-m32"
                fi
                ;;
            esac

            if test $MODE = fast ; then
                case `uname -m` in
                    i686) if test $gccmaj -ge 3 ; then
                              if test $gccmin -ge 1 ; then
                                  athlon=`grep Athlon /proc/cpuinfo`
                                  xeon=`grep XEON /proc/cpuinfo`
                                  pentium3=`grep "Pentium.* III" /proc/cpuinfo`
                                  pentium4=`grep "Pentium(R) 4" /proc/cpuinfo`
                                  if test -n "$athlon" ; then 
                                      arch="athlon"
                                      ARCH="-march=athlon"
                                  elif test -n "$pentium3" ; then
                                      arch="pentium3"
                                      ARCH="-march=pentium3"
                                  elif test -n "$xeon" ; then
                                      arch="pentium4"
                                      ARCH="-march=pentium4"
                                  elif test -n "$pentium4" ; then
                                      arch="pentium4"
                                      ARCH="-march=pentium4"
                                  else
                                      arch="i686"
                                      ARCH="-march=pentiumpro"
                                  fi
                              else
                                  athlon=`grep Athlon /proc/cpuinfo`
                                  if test -n "$athlon" ; then 
                                      arch="athlon"
                                      ARCH="-march=athlon"
                                  else
                                      arch="i686"
                                      ARCH="-march=pentiumpro"
                                  fi
                              fi
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i686"
                                  ARCH="-mpentiumpro"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i586) if test $gccmaj -ge 3 ; then
                              arch="i586"
                              ARCH="-march=pentium"
                          elif test $gccmaj -gt 2 ; then
                              arch="i586"
                              ARCH="-mpentium"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i586"
                                  ARCH="-mpentium"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i486) if test $gccmaj -ge 3 ; then
                              arch="i486"
                              ARCH="-march=486"
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i386)   arch="i386"
                            ;;

                    ppc)    arch="ppc"
                            ;;

                    ppc64)  power4=`grep POWER4 /proc/cpuinfo`
                            power3=`grep POWER3 /proc/cpuinfo`
                            if test -n "$power4" ; then 
                              arch="power4"
                              ARCH="-mcpu=power4"
                            elif test -n "$power3" ; then
                              arch="power3"
                              ARCH="-mcpu=power3"
                            elif test "$SGI_ABI" = "n64" ; then
                              arch="ppc64"
                              ABI="-m64"
                            else
                              arch="ppc32"
                              ABI="-m32"
                            fi
                            ;;

                    ia64)   arch="ia64"
                            ;;

                    s390)   arch="s390"
                            ;;

                    x86_64) if test "$SGI_ABI" = "n32" ; then
                              arch="i586"
                            else
                              arch="x86_64"
                            fi
                            ;;

                    *)      arch="unknown"
                            ;;
                esac
            else
                case `uname -m` in
                    ppc64)  if test "$SGI_ABI" = "n64" ; then
                              arch="ppc64"
                              ABI="-m64"
                            else
                              arch="ppc32"
                              ABI="-m32"
                            fi
                            ;;
                    x86_64) if test "$SGI_ABI" = "n32" ; then
                              arch="i586"
                            else
                              arch="x86_64"
                            fi
                            ;;

                    i686)   arch="i586"    ;;
                    i586)   arch="i586"    ;;
                    i486)   arch="i386"    ;;
                    i386)   arch="i386"    ;;
                    ppc)    arch="ppc"     ;;
                    ia64)   arch="ia64"    ;;
                    s390)   arch="s390"    ;;
                    *)      arch="unknown" ;;
                esac
            fi
            ;;

        CYGWIN*)
            if test "$cygwin" = 0 ; then
                ABI="-mno-cygwin"
            fi

            if test $MODE = fast ; then
                case `uname -m` in
                    i686) if test $gccmaj -ge 3 ; then
                              arch="i686"
                              ARCH="-march=pentiumpro"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i686"
                                  ARCH="-mpentiumpro"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i586) if test $gccmaj -ge 3 ; then
                              arch="i586"
                              ARCH="-march=pentium"
                          elif test $gccmaj -gt 2 ; then
                              arch="i586"
                              ARCH="-mpentium"
                          elif test $gccmaj -eq 2 ; then
                              if test $gccmin -ge 8 ; then
                                  arch="i586"
                                  ARCH="-mpentium"
                              else
                                  arch="i486"
                                  ARCH="-m486"
                              fi
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i486) if test $gccmaj -ge 3 ; then
                              arch="i486"
                              ARCH="-march=486"
                          else
                              arch="i486"
                              ARCH="-m486"
                          fi
                          ;;

                    i386) arch="i386"
                          ;;
                    *)    arch="unknown"
                          ;;
                esac
            else
                case `uname -m` in
                    i686) arch="i586" ;;
                    i586) arch="i586" ;;
                    i486) arch="i386" ;;
                    i386) arch="i386" ;;
                    *)    arch="unknown"
                          ;;
                esac
            fi
            ;;

        OSF1)
            if test -x /usr/local/bin/gar ; then
                AR="/usr/local/bin/gar"
            fi
            if test "$MODE" = "fast" ; then
                line=`/usr/sbin/psrinfo -v | head -n 3 | tail -n 1`
                cpu=`echo "$line" | cut -d" " -f5`
                case "$cpu" in
                    EV5.6)  rev=`echo "$line" | cut -d" " -f6`
                            if test "$rev" = "(21164PC)" ; then
                                arch="pca56"
                            else
                                arch="ev56"
                            fi
                            ;;
                    # No gcc support for alphaev68 yet!
                    EV6.8*) arch="ev67"      ;;
                    EV6.7)  arch="ev67"      ;;
                    EV6*)   arch="ev6"       ;;
                    EV5.7)  arch="pca56"     ;;
                    EV5.6)  arch="ev56"      ;;
                    EV5*)   arch="ev5"       ;;
                    EV4*)   arch="ev4"       ;;
                    LCA4)   arch="ev4"       ;;
                    *)      arch=""          ;;
                esac
                if test -n "$arch" ; then
                    ARCH="-mcpu=$arch"
                else
                    arch="unknown"
                fi
                LFLAGS="-s -Wl,-S"
            else
                case `uname -m` in
                    alpha) arch="alpha"   ;;
                    *)     arch="unknown" ;;
                esac
                LFLAGS="-Wl,-S"
            fi
            ;;

        Darwin)
            LSOFLAGS="-dynamiclib -undefined suppress -flat_namespace"
            CSOFLAGS="-fPIC -fno-common"
            if test $MODE != debug ; then
                LFLAGS="-Wl,-x"
            fi
            case `machine` in
                ppc970)  arch="G5"
                    ARCH="-falign-loops=32 -mcpu=970 -mtune=970"
                    ;;
                ppc7450) arch="G4"
                    ;;
                *) arch="G3"
                    ;;
            esac
            ;;

        HP-UX)
            case "$cpu" in
                523|528|532) arch="pa"      ;;
                768)         arch="ia64"    ;;
                *)           arch="unknown" ;;
            esac
            CSOFLAGS="-fpic"
            HASSHARED="no"
            ;;

        AIX)
            if test $MODE = "debug" ; then
                LFLAGS="-Wl,-bmaxdata:0xf000000"
            else
                LFLAGS="-s -Wl,-bmaxdata:0xf000000"
            fi
            if test "$SGI_ABI" = "n64" ; then
                LFLAGS="$LFLAGS -Wl,-bbigtoc"
                arch="ppc64"
                ABI="-maix64"
            else
                arch="ppc32"
                ABI="-maix32"
            fi
            ;;
    esac

    if test $MODE = "debug" ; then
        CFLAGS="-g -W -Wall -pedantic -Wno-long-long $CFLAGS $LFS_SUPPORT"
        COPTS1="-ffast-math $ARCH"
        COPTS2="-ffast-math -funroll-loops $ARCH"
    else
        CFLAGS="-W -Wall $CFLAGS $LFS_SUPPORT"
        if test "$useprof" = 0 ; then
            COPTS="-fomit-frame-pointer -ffast-math"
        else
            COPTS="-ffast-math"
        fi
        COPTS1="-O3 $COPTS $ARCH"
        COPTS2="-O3 $COPTS -funroll-loops $ARCH"
    fi
    if test "$useprof" = 1 ; then
        ABI="$ABI -pg"
        LFLAGS=
    fi
    echo "Using optimizing flags $ABI $CFLAGS $COPTS2"
fi

# Generate C++ Test Program
cat > conf.cpp <<EOF
int main( void ) {
    return 0;
}
EOF

# Find UNIX C++ Compiler
if test -z "$CXX"; then
    for dir in $USERPATH; do
        if test -z "$dir" ; then
            continue
        fi
        if test -x "$dir/c++" ; then
            if { (eval "$dir/c++ -o conf conf.cpp ;") 2> /dev/null > /dev/null ;
 } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CXX="$dir/c++"
                break
            fi
        fi
        if test -x "$dir/CC" ; then
            if { (eval "$dir/CC -o conf conf.cpp ;") 2> /dev/null > /dev/null ;
 } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CXX="$dir/CC"
                break
            fi
        fi
        if test -x "$dir/cxx" ; then
            if { (eval "$dir/cxx -o conf conf.cpp ;") 2> /dev/null > /dev/null ;
 } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CXX="$dir/cxx"
                break
            fi
        fi
    done
fi

if test "$usegcc" = 1 ; then
  # Ignore native C++ compiler
  CXX=
  CXXAR=
  CXXFLAGS=
fi

# Find GNU G++ C++ compiler
if test -z "$CXX"; then
    for dir in $USERPATH; do
        if test -z "$dir" ; then
            continue
        fi
        if test -x "$dir/g++" ; then
            if { (eval "$dir/g++ -o conf conf.cpp ;") 2> /dev/null > /dev/null ; } && test -s conf && (./conf; exit) 2> /dev/null ; then
                CXX="$dir/g++"
                break
            fi
        fi
    done
fi

if test -z "$CXX"; then
   if test -x /usr/local/bin/g++ ; then
       CXX="/usr/local/bin/g++"
   fi
fi

if test -z "$CXX"; then
    if test -x /usr/freeware/bin/g++ ; then
        CXX="/usr/freeware/bin/g++"
    fi
fi

if test -z "$CXX"; then
  echo "Warning: Unable to find a suitable C++ compiler CC"
  # exit 1
fi

# Find ld(1)
if test -z "$LD"; then
  for dir in $USERPATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/ld" ; then
      LD="$dir/ld"
      break
    fi
  done
fi

if test -z "$LD"; then
  LD="$CC"
fi

# Operating System Utilities

# Find cp(1)
if test -z "$CP"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x $dir/cp; then
      CP="$dir/cp"
      break
    fi
  done
fi

if test -z "$CP" ; then
  echo "Error: Unable to find cp(1)"
  exit 1
fi


# Find cat(1)
if test -z "$CAT"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/cat" ; then
      CAT="$dir/cat"
      break
    fi
  done
fi

if test -z "$CAT" ; then
  echo "Error: Unable to find cat(1)"
  exit 1
fi


# Find rm(1)
if test -z "$RM" ; then
  if test -x /bin/rm ; then
    RM="/bin/rm"
  fi
fi

if test -z "$RM" ; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/rm" ; then
      RM="$dir/rm"
      break
    fi
  done
fi

if test -z "$RM"; then
  echo "Error: Unable to find rm(1)"
  exit 1
fi


# Find mkdir(1)
if test -z "$MKDIR"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/mkdir" ; then
      MKDIR="$dir/mkdir"
      break
    fi
  done
fi

if test -z "$MKDIR"; then
  echo "Error: Unable to find mkdir(1)"
  exit 1
fi


# Find sed(1)
if test -z "$SED"; then
  if test -x /usr/local/bin/sed ; then
    SED="/usr/local/bin/sed"
  fi
fi

if test -z "$SED"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/sed" ; then
      SED="$dir/sed"
      break
    fi
  done
fi

if test -z "$SED"; then
  echo "Error: Unable to find sed(1)"
  exit 1
fi


# Find awk(1)
if test -z "$AWK"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/awk" ; then
      AWK="$dir/awk"
      break
    fi
  done
fi

if test -z "$AWK"; then
  echo "Error: Unable to find awk(1)"
  exit 1
fi


# Find gzip(1)
if test -z "$GZIP"; then
  for dir in $USERPATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/gzip" ; then
      GZIP="$dir/gzip"
      break
    fi
  done
fi

if test -z "$GZIP"; then
   if test -x /usr/local/bin/gzip; then
      GZIP=/usr/local/bin/gzip
   fi
fi

if test -z "$GZIP"; then
  echo "Warning: Unable to find gzip(1)"
fi


# Find uncompress(1)
if test -z "$UNCOMPRESS"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/uncompress" ; then
      UNCOMPRESS="$dir/uncompress"
      break
    fi
  done
fi

if test -z "$UNCOMPRESS"; then
  if test -x /usr/bsd/uncompress; then
    UNCOMPRESS=/usr/bsd/uncompress
  fi
fi

if test -z "$UNCOMPRESS"; then
  if test -n "$GZIP"; then
    UNCOMPRESS="$GZIP -d"
  fi
fi

if test -z "$UNCOMPRESS"; then
  echo "Error: Unable to find either uncompress(1) or gunzip(1)"
  exit 1
fi

# Find make(1)
if test -z "$MAKE"; then
   if test -x /usr/local/bin/make; then
      MAKE=/usr/local/bin/make
   fi
fi

if test -z "$MAKE"; then
   if test -x /usr/local/bin/gmake; then
      MAKE=/usr/local/bin/gmake
   fi
fi

if test -z "$MAKE"; then
  for dir in $USERPATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/make" ; then
      MAKE="$dir/make"
      break
    fi
  done
fi

if test -z "$MAKE"; then
   if test -x /usr/ccs/bin/make; then
      MAKE=/usr/ccs/bin/make
   fi
fi

if test -z "$MAKE"; then
  echo "Error: Unable to find make(1) or GNU make"
  exit 1
fi

# Test for GNU make
version=`$MAKE --version 2>&1 | head -1 | grep GNU`
if test -n "$version"; then
  MAKE="$MAKE --no-print-directory"
fi

# Find ar(1)
if test -z "$AR"; then
  for dir in $USERPATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/ar" ; then
      AR="$dir/ar"
      break
    fi
  done
fi

if test -z "$AR"; then
   if test -x /usr/ccs/bin/ar; then
      AR=/usr/ccs/bin/ar
   fi
fi

if test -z "$AR"; then
   if test -x /usr/local/bin/ar; then
      AR=/usr/local/bin/ar
   fi
fi

if test -z "$AR"; then
  echo "Error: Unable to find ar(1)"
  exit 1
fi


# Find true(1)
if test -z "$TRUE"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/true" ; then
      TRUE="$dir/true"
      break
    fi
  done
fi

if test -z "$TRUE"; then
  echo "Error: Unable to find true(1)"
  exit 1
fi


# Find chmod(1)
if test -z "$CHMOD"; then
  for dir in $PATH; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/chmod" ; then
      CHMOD="$dir/chmod"
      break
    fi
  done
fi

if test -z "$CHMOD"; then
  echo "Warning: Unable to find chmod(1)"
  CHMOD="$TRUE"
  exit 1
fi


# Find strip(1)
if test -z "$STRIP" ; then
  for dir in $PATH ; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/strip" ; then
      STRIP="$dir/strip"
      break
    fi
  done
fi

if test -z "$STRIP"; then
   if test -x /usr/ccs/bin/strip; then
      STRIP="/usr/ccs/bin/strip"
   fi
fi

if test -z "$STRIP"; then
  echo "Warning: Unable to find strip(1)"
  STRIP="$TRUE"
fi

# Disable strip(1) in debug mode!
if test $MODE = "debug" ; then
   STRIP="$TRUE"
fi

if test -z "$RANLIB"; then
  RANLIB="$TRUE"
fi

if test -z "$REZ"; then
  REZ="$TRUE"
fi

# Find tar(1)
if test -z "$TAR" ; then
  for dir in $USERPATH ; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/tar" ; then
      TAR="$dir/tar"
      break
    fi
  done
fi

if test -z "$TAR"; then
   if test -x /usr/local/bin/tar; then
      TAR="/usr/local/bin/tar"
   fi
fi

if test -z "$TAR"; then
   if test -x /usr/local/bin/gtar; then
      TAR="/usr/local/bin/gtar"
   fi
fi

if test -z "$TAR"; then
  echo "Warning: Unable to find tar(1)"
  TAR="$TRUE"
fi


# Find install(1)
if test -z "$INSTALL" ; then
  for dir in $USERPATH ; do
    if test -z "$dir" ; then
        continue
    fi
    if test -x "$dir/install" ; then
      INSTALL="$dir/install"
      break
    fi
  done
fi

if test -z "$INSTALL"; then
   if test -x /sbin/install; then
      INSTALL="/sbin/install"
   fi
fi

if test -z "$INSTALL"; then
  echo "Warning: Unable to find install(1)"
  INSTALL="$TRUE"
fi

# final check to not build shared if only static is requested
if [ "$LINKAGE" = "static" ] ; then 
  HASSHARED=no
fi 

# Build C++ Libraries
if test -z "$CXXAR"; then
  CXXAR="$AR rcs"
fi

if test "$arch" = "unknown" ; then
    echo "Host architecture is unknown"
    arch=""
fi

if test -n "$arch" ; then
    dist="$ostype-$osver-$COMPILER-$arch"
    appdist="$ostype-$osver-$arch"
else
    dist="$ostype-$osver-$COMPILER"
    appdist="$ostype-$osver"
fi
echo "Distribution type is $dist"

echo "$dist" > conf.arch
cat > conf.subs <<EOF
s%@CC@%$CC%g
s%@CXX@%$CXX%g
s%@ABI@%$ABI%g
s%@CFLAGS@%$CFLAGS%g
s%@COPTS1@%$COPTS1%g
s%@COPTS2@%$COPTS2%g
s%@CMPFLAGS@%$CMPFLAGS%g
s%@CXXFLAGS@%$CXXFLAGS%g
s%@COMPILER@%$COMPILER%g
s%@LD@%$LD%g
s%@LOPTS@%$LOPTS%g
s%@LFLAGS@%$LFLAGS%g
s%@HASSHARED@%$HASSHARED%g
s%@CSOFLAGS@%$CSOFLAGS%g
s%@LSOFLAGS@%$LSOFLAGS%g
s%@DSOLIBS@%$DSOLIBS%g
s%@SYSMPLIBS@%$SYSMPLIBS%g
s%@SYSSOCKLIBS@%$SYSSOCKLIBS%g
s%@SYSKMEMLIB@%$SYSKMEMLIB%g
s%@SYSMATHLIB@%$SYSMATHLIB%g
s%@SYSSQRTLIB@%$SYSSQRTLIB%g
s%@LOCALINCS@%$LOCALINCS%g
s%@LOCALLIBS@%$LOCALLIBS%g
s%@X11INCS@%$X11INCS%g
s%@X11LIBS@%$X11LIBS%g
s%@PVMINCS@%$PVMINCS%g
s%@PVMLIBS@%$PVMLIBS%g
s%@ISMAC@%$ISMAC%g
s%@HASPVM@%$HASPVM%g
s%@QTINCS@%$QTINCS%g
s%@QTLIBS@%$QTLIBS%g
s%@HASQT@%$HASQT%g
s%@QWTINCS@%$QWTINCS%g
s%@QWTLIBS@%$QWTLIBS%g
s%@HASQWT@%$HASQWT%g
s%@FLTKINCS@%$FLTKINCS%g
s%@FLTKLIBS@%$FLTKLIBS%g
s%@GLDLIBS@%$GLDLIBS%g
s%@MWINDOWS@%$MWINDOWS%g
s%@GLINCS@%$GLINCS%g
s%@HASFLTK@%$HASFLTK%g
s%@CP@%$CP%g
s%@RM@%$RM%g
s%@AR@%$AR%g
s%@CAT@%$CAT%g
s%@MKDIR@%$MKDIR%g
s%@CHMOD@%$CHMOD%g
s%@SED@%$SED%g
s%@AWK@%$AWK%g
s%@TAR@%$TAR%g
s%@UNCOMPRESS@%$UNCOMPRESS%g
s%@GZIP@%$GZIP%g
s%@MAKE@%$MAKE%g
s%@STRIP@%$STRIP%g
s%@INSTALL@%$INSTALL%g
s%@EXE@%$EXE%g
s%@OBJ@%$OBJ%g
s%@SOBJ@%$SOBJ%g
s%@LIB@%$LIB%g
s%@DLL@%$DLL%g
s%@LIBPREFIX@%$LIBPREFIX%g
s%@LN@%$LN%g
s%@WINDRES@%$WINDRES%g
s%@RANLIB@%$RANLIB%g
s%@CXXAR@%$CXXAR%g
s%@REZ@%$REZ%g
s%@MOC@%$MOC%g
s%@UIC@%$UIC%g
s%@LRELEASE@%$LRELEASE%g
s%@VPATH@%$VPATH%g
s%@DIST@%$dist%g
s%@APPDIST@%$appdist%g
s%@GCCMAJ@%$gccmaj%g
s%@GCCMIN@%$gccmin%g
s%@HASPYTHON@%$HASPYTHON%g
s%@HASPYTHONDEV@%$HASPYTHONDEV%g
s%@HASGL@%$HASGL%g
s%@PYTHON@%$PYTHON%g
s%@PYVERSION@%$PYVERSION%g
s%@PYPACKAGE@%$PYPACKAGE%g
s%@PYINCLUDE@%$PYINCLUDE%g
s%@PYLIB@%$PYLIB%g
s%@PYLSO@%$PYLSO%g
s%@PYTHON_DLINK@%$PYTHON_DLINK%g
s%@PYTHON_SLINK@%$PYTHON_SLINK%g
s%@PYTHON_LLINK@%$PYTHON_LLINK%g
s%@JAVAC@%$JAVAC%g
s%@JAVA@%$JAVA%g
s%@JAR@%$JAR%g
s%@JAVAINC@%$JAVAINC%g
s%@JAVALIBPREFIX@%$JAVALIBPREFIX%g
s%@JAVA_DLINK@%$JAVA_DLINK%g
s%@JAVASO@%$JAVASO%g
s%@JAVADYNAMICLINKING@%$JAVADYNAMICLINKING%g
s%@HASJAVA@%$HASJAVA%g
s%@SWIG@%$SWIG%g
s%@HASSWIG@%$HASSWIG%g
s%@LSOEXTRAS@%$LSOEXTRAS%g
s%@LINKAGE@%$LINKAGE%g
s%@MODULEFLAGS@%$MODULEFLAGS%g
s%@MODULE@%$MODULE%g
EOF

if test -r ./configure.sub ; then
    /bin/sh configure.sub
elif test -r $VPATH/configure.sub ; then
    /bin/sh $VPATH/configure.sub
fi

if test -r Makefile.in ; then
    $SED -f conf.subs Makefile.in > Makefile
elif test -r $VPATH/Makefile.in ; then
    $SED -f conf.subs $VPATH/Makefile.in > Makefile
fi
rm -f conf.c conf.cpp conf conf.exe conf.o core
exit 0

